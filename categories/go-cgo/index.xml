<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go cgo on LESS IS MORE</title>
    <link>http://r9y9.github.io/categories/go-cgo/</link>
    <description>Recent content in Go cgo on LESS IS MORE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 22 Mar 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://r9y9.github.io/categories/go-cgo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>cgo の基本的な使い方とポインタ周りのTips (Go v1.2)</title>
      <link>http://r9y9.github.io/blog/2014/03/22/cgo-tips/</link>
      <pubDate>Sat, 22 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://r9y9.github.io/blog/2014/03/22/cgo-tips/</guid>
      <description>C/C++ライブラリのGoラッパーを書くためには、cgoというパッケージを使うのだけど、特にCのポインタ周りにハマりどころが多かったので、少しまとめとく
cgoの基礎については、以下の二つを読むことを推奨
 http://golang.org/cmd/cgo/ https://code.google.com/p/go-wiki/wiki/cgo  この記事では、cgo基本的な使い方と、いくつかポインタ絡みのTipsをまとめる。Tipsのみ必要な場合は、最初の方は飛ばして下さい
cgo  Cgo enables the creation of Go packages that call C code.
 http://golang.org/cmd/cgo/
cgoとは、GoからCの関数/型にアクセスするために用いるパッケージのこと。cgoを使えば、GoからCのコードが呼べる。つまり、Cで書かれたライブラリが、Goでも再利用できる。
なお、go v1.2 から、C++もサポートされている様子 http://golang.org/doc/go1.2#cgo_and_cpp
ただし、C++ライブラリの使用方法については現時点でドキュメントはほぼ無し。僕の経験では、extern &amp;ldquo;C&amp;rdquo; を付けておくとC++用のコンパイラでコンパイルされたライブラリでも呼べる
基本的な使い方 まず、Cの型/関数にアクセスするために、cgoパッケージのimportを行う
import &amp;quot;C&amp;quot;  import文のすぐ上のコメントにinclude &amp;lt;ヘッダ.h&amp;gt; と書けば、コンパイルする際に自動で読み込まれるので、必要なヘッダを書く
// #include &amp;lt;stdio.h&amp;gt; // #include &amp;lt;stdlib.h&amp;gt; import &amp;quot;C&amp;quot;  これで、C.int, C.float, C.double, *C.char、C.malloc, C.free などのようにして、Cの型や関数にアクセスできる
外部ライブラリを呼ぶ 通常は、ヘッダファイルをincludeするだけでなく、何かしらのライブラリとリンクして用いることが多いので、そのような場合には、ライブラリの依存関係をgoのコードに記述する
cgoでは、includeの設定と同様に、CFLAGS、CPPFLAGS、CXXFLAGS、LDFLAGS、pkg-configを記述することができる
pkg-configを使うと 、
// #cgo pkg-config: png cairo // #include &amp;lt;png.h&amp;gt; import &amp;quot;C&amp;quot;  こんな感じ（Goの公式ページから参照）</description>
    </item>
    
  </channel>
</rss>
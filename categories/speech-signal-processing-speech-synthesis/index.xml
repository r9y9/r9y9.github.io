<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>speech-signal-processing speech-synthesis on LESS IS MORE</title>
    <link>http://r9y9.github.io/categories/speech-signal-processing-speech-synthesis/</link>
    <description>Recent content in speech-signal-processing speech-synthesis on LESS IS MORE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 01 Dec 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://r9y9.github.io/categories/speech-signal-processing-speech-synthesis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MLSA digital filter のC&#43;&#43;実装</title>
      <link>http://r9y9.github.io/blog/2013/12/01/mlsa-filter-with-c-plus-plus/</link>
      <pubDate>Sun, 01 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://r9y9.github.io/blog/2013/12/01/mlsa-filter-with-c-plus-plus/</guid>
      <description>MLSAフィルタわからんという記事を書いて早2ヶ月、ようやく出来た。
Mel-log spectrum approximate (MLSA) filterというのは、対数振幅スペクトルを近似するようにメルケプストラムから直接音声を合成するデジタルフィルタです。SPTKのmlsa filterと比較して完全に計算結果が一致したので、間違ってはないはず。MLSAフィルタを使ってメルケプから音声合成するプログラムをC++で自分で書きたいという稀有な人であれば、役に立つと思います。基本的に、SPTKのmlsa filterの再実装です。
mlsa_filter.h https://gist.github.com/r9y9/7735120
#pragma once #include &amp;lt;cmath&amp;gt; #include &amp;lt;memory&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;cassert&amp;gt; namespace sp { /** * MLSA BASE digital filter (Mel-log Spectrum Approximate digital filter) */ class mlsa_base_filter { public: mlsa_base_filter(const int order, const double alpha); template &amp;lt;class Vector&amp;gt; double filter(const double x, const Vector&amp;amp; b); private: mlsa_base_filter(); double alpha_; std::vector&amp;lt;double&amp;gt; delay_; }; mlsa_base_filter::mlsa_base_filter(const int order, const double alpha) : alpha_(alpha), delay_(order+1) { } template &amp;lt;class Vector&amp;gt; double mlsa_base_filter::filter(const double x, const Vector&amp;amp; b) { double result = 0.</description>
    </item>
    
    <item>
      <title>MLSA フィルタの実装</title>
      <link>http://r9y9.github.io/blog/2013/09/23/mlsa-filter-wakaran/</link>
      <pubDate>Mon, 23 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://r9y9.github.io/blog/2013/09/23/mlsa-filter-wakaran/</guid>
      <description>音声合成に使われるMLSA（Mel-Log Spectrum Approximatation）フィルタを実装したいんだが、なにぶんわからん。SPTKにコードはあるけれど、正直理解できない。デジタル信号処理を小学一年生から勉強しなおしたいレベルだ
と、前置きはさておき、MLSAフィルタの実装を見つけたのでメモ。ここ最近ちょくちょく調べているが、SPTK以外で初めて見つけた。
Realisation and Simulation of the Mel Log Spectrum Approximation Filter | Simple4All Internship Report
Simple4Allという音声技術系のコミュニティの、学生さんのインターンの成果らしい。ちらっと調べてたら山岸先生も参加してる（た？）っぽい。
上のreportで引用されているように、MLSA filterの実現方法については、益子さんのD論に詳しく書いてあることがわかった。今井先生の論文と併せて読んでみようと思う。
T. Masuko, &amp;ldquo;HMM-Based Speech Synthesis and Its Applications&amp;rdquo;, Ph.D Thesis, 2002.
もう正直わからんしブラックボックスでもいいから既存のツール使うかーと諦めかけていたところで割りと丁寧な実装付き解説を見つけたので、もう一度勉強して実装してみようと思い直した。
機械学習にかまけて信号処理をちゃんと勉強していなかったつけがきている。LMA filterもMLSA filterも、本当にわからなくてツライ……
(実装だけであれば、実はそんなに難しくなかった 2013/09後半)
追記 2015/02/25 誤解を生む表現があったので、直しました</description>
    </item>
    
  </channel>
</rss>